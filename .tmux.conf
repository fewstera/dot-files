set-option -g default-shell /bin/zsh
set -g default-terminal "screen-256color"
set -g mouse on
set -g focus-events on

# Move around like vim!
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# When opening new pane, open at current path
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# Fix ESC in vim
set -s escape-time 0

# Make it like vi
set-window-option -g mode-keys vi

# Setup 'v' to begin selection as in Vim, 'y' or 'Enter' yanks
bind-key    -T copy-mode-vi    v send-keys -X begin-selection
bind-key    -T copy-mode-vi    y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key    -T copy-mode-vi    Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Fix copying behaviour
set-option -g default-command "reattach-to-user-namespace -l zsh"
bind-key    -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Bind ']' to use pbpaste
bind ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"
